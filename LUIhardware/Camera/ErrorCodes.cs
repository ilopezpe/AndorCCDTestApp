namespace LuiHardware.Camera
{
    /// <summary>
    /// Returns error string 
    /// </summary>
    public static class ErrorCodes
    {
        public static string Decoder(uint error)
        {
            switch (error)
            {
                case 20001:
                    return "DRV_ERROR_CODES";
                case 20002:
                    return "DRV_SUCCESS";
                case 20003:
                    return "DRV_VXDNOTINSTALLED";
                case 20004:
                    return "DRV_ERROR_SCAN";
                case 20005:
                    return "DRV_ERROR_CHECK_SUM";
                case 20006:
                    return "DRV_ERROR_FILELOAD";
                case 20007:
                    return "DRV_UNKNOWN_FUNCTION";
                case 20008:
                    return "DRV_ERROR_VXD_INIT";
                case 20009:
                    return "DRV_ERROR_ADDRESS";
                case 20010:
                    return "DRV_ERROR_PAGELOCK";
                case 20011:
                    return "DRV_ERROR_PAGE_UNLOCK";
                case 20012:
                    return "DRV_ERROR_BOARDTEST";
                case 20013:
                    return "DRV_ERROR_ACK";
                case 20014:
                    return "DRV_ERROR_UP_FIFO";
                case 20015:
                    return "DRV_ERROR_PATTERN";
                case 20017:
                    return "DRV_ACQUISITION_ERRORS";
                case 20018:
                    return "DRV_ACQ_BUFFER";
                case 20019:
                    return "DRV_ACQ_DOWNFIFO_FULL";
                case 20020:
                    return "DRV_PROC_UNKNOWN_INSTRUCTION";
                case 20021:
                    return "DRV_ILLEGAL_OP_CODE";
                case 20022:
                    return "DRV_KINETIC_TIME_NOT_MET";
                case 20023:
                    return "DRV_ACCUM_TIME_NOT_MET";
                case 20024:
                    return "DRV_NO_NEW_DATA";
                case 20026:
                    return "DRV_SPOOLERROR";
                case 20033:
                    return "DRV_TEMPERATURE_CODES";
                case 20034:
                    return "DRV_TEMPERATURE_OFF";
                case 20035:
                    return "DRV_TEMPERATURE_NOT_STABILIZED";
                case 20036:
                    return "DRV_TEMPERATURE_STABILIZED";
                case 20037:
                    return "DRV_TEMPERATURE_NOT_REACHED";
                case 20038:
                    return "DRV_TEMPERATURE_OUT_RANGE";
                case 20039:
                    return "DRV_TEMPERATURE_NOT_SUPPORTED";
                case 20040:
                    return "DRV_TEMPERATURE_DRIFT";
                case 20049:
                    return "DRV_GENERAL_ERRORS";
                case 20050:
                    return "DRV_INVALID_AUX";
                case 20051:
                    return "DRV_COF_NOTLOADED";
                case 20052:
                    return "DRV_FPGAPROG";
                case 20053:
                    return "DRV_FLEXERROR";
                case 20054:
                    return "DRV_GPIBERROR";
                case 20064:
                    return "DRV_DATATYPE";
                case 20065:
                    return "DRV_DRIVER_ERRORS";
                case 20066:
                    return "DRV_P1INVALID";
                case 20067:
                    return "DRV_P2INVALID";
                case 20068:
                    return "DRV_P3INVALID";
                case 20069:
                    return "DRV_P4INVALID";
                case 20070:
                    return "DRV_INIERROR";
                case 20071:
                    return "DRV_COFERROR";
                case 20072:
                    return "DRV_ACQUIRING";
                case 20073:
                    return "DRV_IDLE";
                case 20074:
                    return "DRV_TEMPCYCLE";
                case 20075:
                    return "DRV_NOT_INITIALIZED";
                case 20076:
                    return "DRV_P5INVALID";
                case 20077:
                    return "DRV_P6INVALID";
                case 20078:
                    return "DRV_INVALID_MODE";
                case 20079:
                    return "DRV_INVALID_FILTER";
                case 20080:
                    return "DRV_I2CERRORS";
                case 20081:
                    return "DRV_DRV_I2CDEVNOTFOUND";
                case 20082:
                    return "DRV_I2CTIMEOUT";
                case 20083:
                    return "DRV_P7INVALID";
                case 20089:
                    return "DRV_USBERROR";
                case 20090:
                    return "DRV_IOCERROR";
                case 20091:
                    return "DRV_NOT_SUPPORTED";
                case 20093:
                    return "DRV_USB_INTERRUPT_ENDPOINT_ERROR";
                case 20094:
                    return "DRV_RANDOM_TRACK_ERROR";
                case 20095:
                    return "DRV_INVALID_TRIGGER_MODE";
                case 20096:
                    return "DRV_LOAD_FIRMWARE_ERROR";
                case 20097:
                    return "DRV_DIVIDE_BY_ZERO_ERROR";
                case 20098:
                    return "DRV_INVALID_RINGEXPOSURES";
                case 20099:
                    return "DRV_BINNING_ERROR";
                case 20990:
                    return "DRV_ERROR_NOCAMERA";
                case 20991:
                    return "DRV_NOT_SUPPORTED";
                case 20992:
                    return "DRV_NOT_AVAILABLE";
                case 20115:
                    return "DRV_ERROR_MAP";
                case 20116:
                    return "DRV_ERROR_UNMAP";
                case 20117:
                    return "DRV_ERROR_MDL";
                case 20118:
                    return "DRV_ERROR_UNMDL";
                case 20119:
                    return "DRV_ERROR_BUFFSIZE";
                case 20121:
                    return "DRV_ERROR_NOHANDLE";
                case 20130:
                    return "DRV_GATING_NOT_AVAILABLE";
                case 20131:
                    return "DRV_FPGA_VOLTAGE_ERROR";
                case 20100:
                    return "DRV_INVALID_AMPLIFIER";
                default:
                    return "BAD CODE";
            }
        }
    }
}
